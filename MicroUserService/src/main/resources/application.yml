spring:
  config:
    import: configserver:http://localhost:8065
#  profiles:
#    active: prod


  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri:  https://dev-65425573.okta.com/oauth2/default
      client:
        registration:
          my-internal-client:
            provider: okta
            authorization-grant-type: client_credentials
            scope: internal
            client-id: 0oa92hdotjuXxpt055d7
            client-secret: 67E6aQs-ggt1k_ukoVJtfQhDuExinYZhZboIcB5k

        provider:
          okta:
            issuer-uri:  https://dev-65425573.okta.com/oauth2/default


management:
  health:
    circuit-breakers:
      enabled: true
  endpoints:
   web:
    exposure:
      include: health
  endpoint:
    health:
      show-details: always
      
resilience4j:
  circuitbreaker:
    instances:
      ratingHotelBreaker:
        registerHealthIndicator: true
        eventConsumerBufferSize: 10
        failureRateThreshold: 50
        minimumNumberOfCalls: 5
        automaticTransitionFromOpenToHalfOpenEnabled: true
        waitDurationInOpenState: 6s
        permittedNumberOfCallsInHalfOpenState: 3
        slidingWindowSize: 10
        slidingWindowType: COUNT_BASED
        
         #for retry
  retry:
    instances:
      ratingHotelService:
        maxAttempts: 3
        waitDuration: 3s
           
           #RateLimiter
  rate-limiter:
    instances:
      userRateLimiter:
        limitRefreshPeriod: 4s
        limitForPeriod: 2
        timeoutDuration: 3s
        
okta:
  oauth2:
    issuer: https://dev-65425573.okta.com/oauth2/default
    audience: api://default        